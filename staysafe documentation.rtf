{\rtf1\ansi\ansicpg1252\cocoartf2865
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\froman\fcharset0 Times-Bold;\f1\fmodern\fcharset0 Courier;\f2\froman\fcharset0 Times-Roman;
\f3\fmodern\fcharset0 Courier-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red109\green109\blue109;}
{\*\expandedcolortbl;;\cssrgb\c0\c0\c0;\cssrgb\c50196\c50196\c50196;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid201\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat3\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid301\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid401\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat2\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid501\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat3\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid601\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid801\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1001\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}}
\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 0) Repo layout\
\pard\pardeftab720\partightenfactor0

\f1\b0\fs26 \cf0 \
StaySafe/\
  frontend/                # Next.js + Tailwind UI\
  backend/                 # FastAPI API\
  docker-compose.yml       # dev stack (db + api + ui)\
  README.md\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs24 \cf0 We\'92ll create each part from scratch with Cursor \'93Tasks\'94 below.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 1) System prerequisites\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls1\ilvl0
\f2\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Node 20+\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Python 3.11+\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Docker + Docker Compose\
\ls1\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 (Optional) psql / DBeaver for DB\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 2) Cursor task plan (copy/paste into Cursor, run one block at a time)\
\pard\pardeftab720\sa280\partightenfactor0

\fs28 \cf0 Task A \'97 Initialize repo & git hygiene\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Prompt to Cursor:
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Create a new Git repo with this 
\f1\fs26 .gitignore
\f2\fs24  at root.\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
# Node/Next\
node_modules/\
.next/\
out/\
*.log\
\
# Env\
.env\
.env.*\
\
# Python\
__pycache__/\
*.pyc\
.venv/\
\
# Docker\
pgdata/\
\
# OS/Editor\
.DS_Store\
.vscode/\
.idea/\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Task B \'97 Frontend scaffold (Next.js + Tailwind)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Prompt to Cursor:
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 In 
\f1\fs26 frontend/
\f2\fs24 , scaffold a Next.js (TypeScript, App Router) app with Tailwind. Then create the files exactly as specified.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls2\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scaffold
\f2\b0 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
npx create-next-app@latest frontend --typescript --eslint --tailwind --src-dir=false --app --import-alias "@/*"\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls3\ilvl0
\f0\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Environment
\f2\b0 \uc0\u8232 Create 
\f1\fs26 frontend/.env.local
\f2\fs24 :\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
NEXT_PUBLIC_API_BASE_URL=http://localhost:8000\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls4\ilvl0
\f0\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pages and components
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs26 \cf0 frontend/app/layout.tsx
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
import type \{ Metadata \} from "next";\
import "./globals.css";\
\
export const metadata: Metadata = \{\
  title: "StaySafe \'96 Swiss Product Legality Checker",\
  description: "Check if an e-commerce product is likely prohibited in Switzerland.",\
\};\
\
export default function RootLayout(\{ children \}: \{ children: React.ReactNode \}) \{\
  return (\
    <html lang="en">\
      <body className="min-h-screen bg-white antialiased">\{children\}</body>\
    </html>\
  );\
\}\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 frontend/app/page.tsx
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
"use client";\
import \{ useState, useTransition \} from "react";\
\
type Verdict = "ALLOWED" | "PROHIBITED" | "UNCLEAR";\
type CheckResponse = \{\
  verdict: Verdict;\
  confidence: number;\
  reasons: string[];\
  matched_rules?: string[];\
  raw?: unknown;\
\};\
\
const API = process.env.NEXT_PUBLIC_API_BASE_URL!;\
\
export default function Page() \{\
  const [platform, setPlatform] = useState<"temu"|"shein"|"other">("temu");\
  const [productId, setProductId] = useState("");\
  const [result, setResult] = useState<CheckResponse | null>(null);\
  const [error, setError] = useState<string | null>(null);\
  const [isPending, startTransition] = useTransition();\
\
  async function submit(e: React.FormEvent) \{\
    e.preventDefault();\
    setResult(null); setError(null);\
    startTransition(async () => \{\
      try \{\
        const url = new URL("/check", API);\
        url.searchParams.set("platform", platform);\
        url.searchParams.set("productId", productId.trim());\
        const res = await fetch(url.toString());\
        if (!res.ok) throw new Error(`Request failed: $\{res.status\}`);\
        setResult(await res.json());\
      \} catch (err: any) \{\
        setError(err.message ?? "Something went wrong");\
      \}\
    \});\
  \}\
\
  return (\
    <main className="mx-auto max-w-2xl p-6 space-y-6">\
      <header>\
        <h1 className="text-2xl font-semibold">StaySafe \'96 Swiss Product Legality Checker</h1>\
        <p className="text-sm text-gray-600">Enter a product ID to check likely legality in Switzerland.</p>\
      </header>\
\
      <form onSubmit=\{submit\} className="flex flex-col gap-3 md:flex-row md:items-end">\
        <label className="flex-1">\
          <span className="mb-1 block text-sm font-medium">Platform</span>\
          <select value=\{platform\} onChange=\{e => setPlatform(e.target.value as any)\} className="w-full rounded-xl border p-2">\
            <option value="temu">Temu</option>\
            <option value="shein">Shein</option>\
            <option value="other">Other</option>\
          </select>\
        </label>\
        <label className="flex-[2]">\
          <span className="mb-1 block text-sm font-medium">Product ID</span>\
          <input value=\{productId\} onChange=\{e => setProductId(e.target.value)\}\
                 placeholder="e.g., 1234567890 or paste product title (use 'other')"\
                 className="w-full rounded-xl border p-2" />\
        </label>\
        <button disabled=\{isPending\} className="rounded-xl bg-blue-600 px-4 py-2 text-white hover:bg-blue-700">\
          \{isPending ? "Checking\'85" : "Check"\}\
        </button>\
      </form>\
\
      \{error && <div className="rounded-xl border border-red-200 bg-red-50 p-3 text-sm text-red-800">\{error\}</div>\}\
\
      \{result && (\
        <div className="rounded-2xl border p-4 shadow-sm space-y-2">\
          <div className="flex items-center justify-between">\
            <span className=\{`rounded-full px-3 py-1 text-sm font-medium $\{\
              result.verdict==="ALLOWED" ? "bg-green-100 text-green-800" :\
              result.verdict==="PROHIBITED" ? "bg-red-100 text-red-800" :\
              "bg-yellow-100 text-yellow-800"\
            \}`\}>\
              \{result.verdict === "ALLOWED" ? "Likely Allowed" :\
               result.verdict === "PROHIBITED" ? "Likely Prohibited" : "Unclear / Needs Review"\}\
            </span>\
            <span className="text-sm text-gray-500">Confidence: \{(result.confidence*100).toFixed(0)\}%</span>\
          </div>\
          \{result.reasons?.length ? (\
            <ul className="list-disc pl-6 text-sm">\
              \{result.reasons.map((r, i) => <li key=\{i\}>\{r\}</li>)\}\
            </ul>\
          ) : null\}\
          \{result.matched_rules?.length ? (\
            <div className="text-xs text-gray-500">Matched rules: \{result.matched_rules.join(", ")\}</div>\
          ) : null\}\
        </div>\
      )\}\
\
      <footer className="mt-10 text-center text-xs text-gray-500">\
        Built for Gov3 hackathon \'95 MIT\
      </footer>\
    </main>\
  );\
\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 Run locally (optional):
\f2\b0 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
cd frontend\
npm i\
npm run dev\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Task C \'97 Backend scaffold (FastAPI + async SQLAlchemy + Postgres)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Prompt to Cursor:
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Create 
\f1\fs26 backend/
\f2\fs24  with FastAPI, async SQLAlchemy, basic models, routers, startup DB create, and a simple rule engine exactly as below.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\f0\b \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Requirements
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs26 \cf0 backend/requirements.txt
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
fastapi==0.114.2\
uvicorn[standard]==0.30.6\
SQLAlchemy==2.0.36\
asyncpg==0.29.0\
pydantic==2.9.2\
pydantic-settings==2.4.0\
httpx==0.27.2\
beautifulsoup4==4.12.3\
python-dotenv==1.0.1\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f0\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Env
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs26 \cf0 backend/.env
\f2\fs24  (dev)\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
DATABASE_URL=postgresql+asyncpg://staysafe:staysafe@localhost:5433/staysafe\
ALLOWED_ORIGINS=http://localhost:3000\
LOG_LEVEL=INFO\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f0\b\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 App files
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs26 \cf0 backend/app/__init__.py
\f2\fs24  (empty)\

\f1\fs26 backend/app/db.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
import os\
from dotenv import load_dotenv\
load_dotenv()\
\
from sqlalchemy.ext.asyncio import create_async_engine, async_sessionmaker, AsyncSession\
from sqlalchemy.orm import declarative_base\
\
DATABASE_URL = os.getenv("DATABASE_URL", "postgresql+asyncpg://staysafe:staysafe@localhost:5432/staysafe")\
engine = create_async_engine(DATABASE_URL, echo=False, pool_pre_ping=True)\
AsyncSessionLocal = async_sessionmaker(engine, expire_on_commit=False)\
Base = declarative_base()\
\
async def get_db() -> AsyncSession:\
    async with AsyncSessionLocal() as session:\
        yield session\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/models.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from __future__ import annotations\
from datetime import datetime, timezone\
from typing import Optional\
from sqlalchemy import String, Text, JSON, Float, Integer, DateTime, Index\
from sqlalchemy.orm import Mapped, mapped_column\
from .db import Base\
\
class Product(Base):\
    __tablename__ = "products"\
    id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True)\
    platform: Mapped[str] = mapped_column(String(20), index=True)\
    product_id: Mapped[str] = mapped_column(String(100), index=True)\
    title: Mapped[Optional[str]] = mapped_column(String(512), nullable=True)\
    description: Mapped[Optional[str]] = mapped_column(Text, nullable=True)\
    attrs: Mapped[Optional[dict]] = mapped_column(JSON, nullable=True)\
    last_fetched_ts: Mapped[Optional[datetime]] = mapped_column(DateTime(timezone=True), nullable=True)\
    __table_args__ = (Index("uq_platform_product", "platform", "product_id", unique=True),)\
\
class CheckLog(Base):\
    __tablename__ = "check_logs"\
    id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True)\
    platform: Mapped[str] = mapped_column(String(20), index=True)\
    product_id: Mapped[str] = mapped_column(String(100), index=True)\
    verdict: Mapped[str] = mapped_column(String(20))\
    confidence: Mapped[float] = mapped_column(Float)\
    reasons: Mapped[list] = mapped_column(JSON)\
    matched_rules: Mapped[Optional[list]] = mapped_column(JSON, nullable=True)\
    raw_snapshot: Mapped[Optional[dict]] = mapped_column(JSON, nullable=True)\
    created_ts: Mapped[datetime] = mapped_column(DateTime(timezone=True), default=lambda: datetime.now(timezone.utc))\
\
class Rule(Base):\
    __tablename__ = "rules"\
    id: Mapped[int] = mapped_column(primary_key=True, autoincrement=True)\
    tag: Mapped[str] = mapped_column(String(64), unique=True, index=True)\
    title: Mapped[str] = mapped_column(String(256))\
    pattern: Mapped[str] = mapped_column(String(512))\
    weight: Mapped[int] = mapped_column(Integer, default=1)\
    severity: Mapped[int] = mapped_column(Integer, default=1)\
    note: Mapped[Optional[str]] = mapped_column(Text, nullable=True)\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/schemas.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from typing import Literal, List, Optional\
from pydantic import BaseModel, Field\
Verdict = Literal["ALLOWED", "PROHIBITED", "UNCLEAR"]\
\
class CheckResponse(BaseModel):\
  verdict: Verdict\
  confidence: float = Field(ge=0, le=1)\
  reasons: List[str] = []\
  matched_rules: Optional[List[str]] = None\
  raw: Optional[dict] = None\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/rules.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
import re\
from typing import Sequence, Tuple, List\
DEFAULT_RULES: List[Tuple[str, str, int, int, str]] = [\
  ("laser-pointer-class>1", r"\\bclass\\s*[234]\\b|>\\s*1\\s*mW|>1mW|\\b[3-9]\\s*mW\\b", 3, 5, "Only class 1 laser pointers permitted."),\
  ("switchblade", r"switch\\s*blade|automatic\\s*knife|spring\\s*knife", 2, 4, "Automatic knives prohibited."),\
  ("stun-gun", r"\\bstun\\s*gun\\b|\\btaser\\b", 3, 5, "Electroshock weapons restricted."),\
  ("fireworks-high", r"\\bF3\\b|\\bF4\\b|\\bP2\\b|professional\\s*fireworks", 2, 4, "High-category fireworks restricted."),\
]\
def apply_rules(text: str, rules: Sequence[Tuple[str, str, int, int, str]] = DEFAULT_RULES):\
  matched, score = [], 0\
  for tag, pattern, weight, _sev, _note in rules:\
    if re.search(pattern, text, flags=re.IGNORECASE):\
      matched.append(tag); score += weight\
  return matched, score\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/classifier.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from typing import Optional, Dict, Any, Tuple, List\
from .rules import apply_rules\
def classify(title: Optional[str], description: Optional[str], attrs: Optional[Dict[str, Any]]\
            ) -> Tuple[str, float, List[str], List[str]]:\
  text = " ".join([x for x in [title or "", description or ""] if x])[:8000]\
  matched, score = apply_rules(text)\
  if score >= 4: verdict, conf = "PROHIBITED", min(0.7 + 0.1 * score, 0.99)\
  elif score == 0 and text.strip(): verdict, conf = "ALLOWED", 0.6\
  else: verdict, conf = "UNCLEAR", 0.5\
  reasons: List[str] = []\
  if matched: reasons.append("Matched prohibited patterns: " + ", ".join(matched))\
  if verdict == "UNCLEAR": reasons.append("Insufficient evidence; manual review recommended.")\
  return verdict, conf, reasons, matched\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/routers/__init__.py
\f2\fs24  (empty)\

\f1\fs26 backend/app/routers/health.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from fastapi import APIRouter\
router = APIRouter()\
@router.get("/healthz")\
async def healthz(): return \{"ok": True\}\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/routers/check.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from datetime import datetime, timedelta, timezone\
from fastapi import APIRouter, Depends\
from sqlalchemy import select\
from sqlalchemy.ext.asyncio import AsyncSession\
from ..db import get_db\
from ..models import Product, CheckLog\
from ..schemas import CheckResponse\
from ..classifier import classify\
\
router = APIRouter()\
FETCH_TTL_HOURS = 12\
\
async def fetch_metadata(platform: str, product_id: str):\
  # MVP: no external fetch; treat product_id as text when platform='other'\
  if platform == "other":\
    return \{"title": product_id, "description": None, "attrs": \{\}\}\
  return \{"title": f"\{platform\}:\{product_id\}", "description": None, "attrs": \{\}\}\
\
@router.get("/check", response_model=CheckResponse)\
async def check(platform: str, productId: str, db: AsyncSession = Depends(get_db)):\
  res = await db.execute(select(Product).where(Product.platform==platform, Product.product_id==productId))\
  prod = res.scalar_one_or_none()\
  need_fetch = not prod or not prod.last_fetched_ts or prod.last_fetched_ts < datetime.now(timezone.utc) - timedelta(hours=FETCH_TTL_HOURS)\
  if need_fetch:\
    meta = await fetch_metadata(platform, productId)\
    if not prod:\
      prod = Product(platform=platform, product_id=productId, title=meta["title"], description=meta["description"], attrs=meta["attrs"], last_fetched_ts=datetime.now(timezone.utc))\
      db.add(prod)\
    else:\
      prod.title, prod.description, prod.attrs = meta["title"], meta["description"], meta["attrs"]\
      prod.last_fetched_ts = datetime.now(timezone.utc)\
    await db.commit(); await db.refresh(prod)\
  verdict, conf, reasons, matched = classify(prod.title, prod.description, prod.attrs or \{\})\
  db.add(CheckLog(platform=platform, product_id=productId, verdict=verdict, confidence=conf, reasons=reasons, matched_rules=matched, raw_snapshot=\{"title": prod.title, "description": prod.description, "attrs": prod.attrs\}))\
  await db.commit()\
  return CheckResponse(verdict=verdict, confidence=conf, reasons=reasons, matched_rules=matched, raw=\{"title": prod.title, "description": prod.description\})\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/main.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from fastapi import FastAPI\
from fastapi.middleware.cors import CORSMiddleware\
import os\
from . import models  # register tables\
from .db import engine, Base\
from .routers import health, check\
\
app = FastAPI(title="StaySafe API", version="0.1.0")\
\
origins_env = os.getenv("ALLOWED_ORIGINS", "*")\
origins = [o.strip() for o in origins_env.split(",")] if origins_env else ["*"]\
\
app.add_middleware(\
  CORSMiddleware, allow_origins=origins if origins != ["*"] else ["*"],\
  allow_credentials=False, allow_methods=["*"], allow_headers=["*"]\
)\
\
@app.on_event("startup")\
async def on_startup():\
  async with engine.begin() as conn:\
    await conn.run_sync(Base.metadata.create_all)\
\
app.include_router(health.router, tags=["system"])\
app.include_router(check.router, tags=["check"])\
\
@app.get("/")\
async def root():\
  return \{"name": "StaySafe API", "docs": "/docs", "health": "/healthz"\}\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 Run (host DB on 5433):
\f2\b0 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
cd backend\
pip install -r requirements.txt\
uvicorn app.main:app --reload --port 8000\
# http://localhost:8000/healthz\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Task D \'97 Docker & Compose (dev stack)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Prompt to Cursor:
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Add Dockerfiles and Compose to run db+api+ui locally.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs26 \cf0 docker-compose.yml
\f2\fs24  (root)\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
services:\
  db:\
    image: postgres:15\
    environment:\
      POSTGRES_USER: staysafe\
      POSTGRES_PASSWORD: staysafe\
      POSTGRES_DB: staysafe\
    ports: ["5433:5432"]   # expose for DBeaver\
    volumes: [pgdata:/var/lib/postgresql/data]\
\
  backend:\
    build: ./backend\
    environment:\
      DATABASE_URL: postgresql+asyncpg://staysafe:staysafe@db:5432/staysafe\
      ALLOWED_ORIGINS: http://localhost:3000\
    ports: ["8000:8000"]\
    depends_on: [db]\
\
  frontend:\
    build:\
      context: ./frontend\
      dockerfile: Dockerfile\
    environment:\
      NEXT_PUBLIC_API_BASE_URL: http://localhost:8000\
    ports: ["3000:3000"]\
    depends_on: [backend]\
\
volumes:\
  pgdata:\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/Dockerfile
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
FROM python:3.11-slim\
WORKDIR /app\
ENV PYTHONDONTWRITEBYTECODE=1 PYTHONUNBUFFERED=1\
COPY requirements.txt ./\
RUN pip install --no-cache-dir -r requirements.txt\
COPY . .\
EXPOSE 8000\
CMD ["uvicorn","app.main:app","--host","0.0.0.0","--port","8000"]\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 frontend/Dockerfile
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
FROM node:20-bookworm-slim AS builder\
WORKDIR /app\
COPY package.json package-lock.json* ./\
RUN if [ -f package-lock.json ]; then npm ci; else npm i; fi\
COPY . .\
ARG NEXT_PUBLIC_API_BASE_URL\
ENV NEXT_PUBLIC_API_BASE_URL=$\{NEXT_PUBLIC_API_BASE_URL\}\
RUN npm run build\
\
FROM node:20-bookworm-slim\
WORKDIR /app\
ENV NODE_ENV=production PORT=3000\
COPY package.json package-lock.json* ./\
RUN if [ -f package-lock.json ]; then npm ci --omit=dev; else npm i --omit=dev; fi\
COPY --from=builder /app/.next ./.next\
COPY --from=builder /app/public ./public\
COPY --from=builder /app/next.config.mjs ./next.config.mjs\
EXPOSE 3000\
CMD ["npm","start"]\
\pard\pardeftab720\sa240\partightenfactor0

\f0\b\fs24 \cf0 Run:
\f2\b0 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
docker compose up --build\
# UI: http://localhost:3000\
# API: http://localhost:8000/docs\
# DB (DBeaver): localhost:5433, db/user/pass = staysafe\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Task E \'97 
\f3\fs30\fsmilli15210 /rules
\f0\fs28  and 
\f3\fs30\fsmilli15210 /explain
\f0\fs28  (transparency)\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Prompt to Cursor:
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Add two endpoints for transparency: 
\f1\fs26 /rules
\f2\fs24  (list current patterns) and 
\f1\fs26 /explain
\f2\fs24  (return matched rules + text snippets) as below.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs26 \cf0 backend/app/routers/rules.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from fastapi import APIRouter\
from ..rules import DEFAULT_RULES\
router = APIRouter()\
\
@router.get("/rules")\
def list_rules():\
  return [\{"tag": tag, "pattern": pattern, "weight": weight, "severity": severity, "note": note\}\
          for (tag, pattern, weight, severity, note) in DEFAULT_RULES]\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs24 \cf0 Append to 
\f1\fs26 backend/app/main.py
\f2\fs24 :\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from .routers import rules\
app.include_router(rules.router, tags=["rules"])\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 backend/app/routers/explain.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from fastapi import APIRouter, Depends, HTTPException\
from sqlalchemy import select\
from sqlalchemy.ext.asyncio import AsyncSession\
from ..db import get_db\
from ..models import Product\
from ..rules import DEFAULT_RULES, apply_rules\
import re\
\
router = APIRouter()\
\
@router.get("/explain")\
async def explain(platform: str, productId: str, db: AsyncSession = Depends(get_db)):\
  res = await db.execute(select(Product).where(Product.platform==platform, Product.product_id==productId))\
  prod = res.scalar_one_or_none()\
  if not prod: raise HTTPException(404, "Product not found; run /check first")\
  text = " ".join([t for t in [prod.title or "", prod.description or ""] if t])\
  matched, _ = apply_rules(text)\
  snippets = []\
  low = text.lower()\
  for tag, pattern, *_ in DEFAULT_RULES:\
    if tag in matched:\
      m = re.search(pattern, low, re.IGNORECASE)\
      if m:\
        i, j = max(0, m.start()-60), min(len(text), m.end()+60)\
        snippets.append(text[i:j].strip())\
  return \{"matched_rules": matched, "snippets": snippets\}\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs24 \cf0 Include in 
\f1\fs26 main.py
\f2\fs24 :\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from .routers import explain\
app.include_router(explain.router, tags=["explain"])\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa280\partightenfactor0

\f0\b\fs28 \cf0 \strokec2 Task F \'97 Batch check + Eval script\
\pard\pardeftab720\sa240\partightenfactor0

\fs24 \cf0 Prompt to Cursor:
\f2\b0 \
\pard\pardeftab720\sa240\partightenfactor0
\cf0 Add 
\f1\fs26 /batch_check
\f2\fs24  and a local eval script.\
\pard\pardeftab720\sa240\partightenfactor0

\f1\fs26 \cf0 backend/app/routers/batch.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from typing import List\
from pydantic import BaseModel\
from fastapi import APIRouter, Depends\
from sqlalchemy.ext.asyncio import AsyncSession\
from .check import check as single_check\
from ..db import get_db\
\
router = APIRouter()\
\
class BatchItem(BaseModel):\
  platform: str\
  productId: str\
\
@router.post("/batch_check")\
async def batch_check(items: List[BatchItem], db: AsyncSession = Depends(get_db)):\
  out = []\
  for it in items:\
    res = await single_check(it.platform, it.productId, db)  # reuse\
    out.append(res)\
  return out\
\pard\pardeftab720\sa240\partightenfactor0

\f2\fs24 \cf0 Include in 
\f1\fs26 main.py
\f2\fs24 :\
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
from .routers import batch\
app.include_router(batch.router, tags=["check"])\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 scripts/eval.py
\f2\fs24 \
\pard\pardeftab720\partightenfactor0

\f1\fs26 \cf0 \
import csv, sys, asyncio, httpx\
async def run(path):\
  gold = []\
  with open(path, newline="") as f:\
    for r in csv.DictReader(f):\
      gold.append((r["platform"], r["product_id"], r["label"].upper()))\
  total= len(gold); ok=0\
  async with httpx.AsyncClient() as client:\
    for plat, pid, label in gold:\
      res = await client.get("http://localhost:8000/check", params=\{"platform": plat, "productId": pid\})\
      pred = res.json()["verdict"].upper()\
      ok += int(pred==label)\
  print(f"Accuracy: \{ok\}/\{total\} = \{ok/total:.2%\}")\
if __name__ == "__main__":\
  asyncio.run(run(sys.argv[1]))\
\pard\pardeftab720\partightenfactor0

\f2\fs24 \cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 3) Acceptance tests (manual)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 API health:
\f2\b0  
\f1\fs26 GET /healthz
\f2\fs24  \uc0\u8594  
\f1\fs26 \{"ok": true\}
\f2\fs24 \
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Rules listed:
\f2\b0  
\f1\fs26 GET /rules
\f2\fs24  \uc0\u8594  array of rules\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check allowed:
\f2\b0  
\f1\fs26 /check?platform=other&productId=plain cotton t-shirt
\f2\fs24  \uc0\u8594  
\f1\fs26 ALLOWED
\f2\fs24  (\uc0\u8776 0.6)\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Check prohibited (laser):
\f2\b0  
\f1\fs26 /check?platform=other&productId=Class 3B laser pointer >5mW
\f2\fs24  \uc0\u8594  
\f1\fs26 PROHIBITED
\f2\fs24  (\uc0\u8805 0.7)\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Explain:
\f2\b0  
\f1\fs26 /explain?platform=other&productId=Class%203B...
\f2\fs24  \uc0\u8594  matched rules + snippets\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DB tables exist:
\f2\b0  
\f1\fs26 products
\f2\fs24 , 
\f1\fs26 check_logs
\f2\fs24 , 
\f1\fs26 rules
\f2\fs24  visible in DBeaver\
\ls8\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Frontend:
\f2\b0  form works end-to-end\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 4) Demo script (what to show judges)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f2\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Paste a Temu/Shein product ID (or choose 
\f1\fs26 platform=other
\f2\fs24  and paste a title like \'93Class 3B laser pointer 5mW\'94) \uc0\u8594  see verdict.\
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open 
\f1\fs26 /rules
\f2\fs24  in Swagger and point to the relevant rule.\
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Open 
\f1\fs26 /explain
\f2\fs24  for the same product \uc0\u8594  show snippets (transparency).\
\ls9\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Show 
\f1\fs26 /batch_check
\f2\fs24  on an eval CSV (optional quick Python run).\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 5) Deployment (fastest paths)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Backend:
\f2\b0  Railway / Render: set 
\f1\fs26 DATABASE_URL
\f2\fs24  (provision Postgres add-on), set 
\f1\fs26 ALLOWED_ORIGINS
\f2\fs24  to your frontend URL.\
\ls10\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Frontend:
\f2\b0  Vercel / Netlify: set 
\f1\fs26 NEXT_PUBLIC_API_BASE_URL
\f2\fs24  to the backend URL.\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 6) Legal/TOS safety notes\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f2\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Only fetch 
\f0\b public
\f2\b0  product pages; throttle; avoid logged-in scraping; respect robots/ToS.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Provide a fallback where the user 
\f0\b pastes title/description
\f2\b0  (
\f1\fs26 platform=other
\f2\fs24 ) if scraping blocked.\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add a UI disclaimer: \'93Advisory only, not legal advice. Check official Swiss guidelines for certainty.\'94\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 7) Troubleshooting quickies\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'93InvalidPasswordError\'94 at startup:
\f2\b0  your backend 
\f1\fs26 DATABASE_URL
\f2\fs24  doesn\'92t match the DB creds/port. For Compose: 
\f1\fs26 postgresql+asyncpg://staysafe:staysafe@db:5432/staysafe
\f2\fs24 . For host DB on 5433: 
\f1\fs26 localhost:5433
\f2\fs24 .\
\ls12\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 DBeaver cannot connect:
\f2\b0  map 
\f1\fs26 5433:5432
\f2\fs24  in Compose, use host 
\f1\fs26 localhost
\f2\fs24 , port 
\f1\fs26 5433
\f2\fs24 , user/db 
\f1\fs26 staysafe
\f2\fs24 .\
\ls12\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Next.js Docker build fails on Alpine:
\f2\b0  switch to 
\f1\fs26 node:20-bookworm-slim
\f2\fs24 .\
\ls12\ilvl0
\f0\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \'93Attribute app not found in app.main\'94:
\f2\b0  ensure 
\f1\fs26 app = FastAPI(...)
\f2\fs24  at module top, and 
\f1\fs26 uvicorn app.main:app
\f2\fs24 .\
\pard\pardeftab720\partightenfactor0
\cf3 \strokec3 \
\pard\pardeftab720\sa298\partightenfactor0

\f0\b\fs36 \cf0 \strokec2 8) Nice-to-have stretch (time permitting)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\f2\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Add 
\f0\b platform scrapers
\f2\b0  in 
\f1\fs26 backend/app/product_sources/
\f2\fs24  with TTL cache.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Expose rule links to Swiss legal references in 
\f1\fs26 /rules
\f2\fs24 .\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Localize UI (EN/DE/FR), add copy-to-share URLs with query params.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 CI GitHub Action to build images and run 
\f1\fs26 scripts/eval.py
\f2\fs24  against a sample CSV.\
}